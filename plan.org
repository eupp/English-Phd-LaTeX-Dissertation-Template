* Контекст и актуальность исследования
** многопоточные программные системы распространены повсеместно
** разработка и тестирование таких систем на порядок сложнее
** возникает потребность в формальной спецификации и верификации таких систем

* Модели истинной конкурентности
** позволяют семантический выразить независимость атомарных событий в системе
** преимущества:
*** упрощение доказательств свойств программ
*** компактное представление пространства состояний многопоточных программ
**** более эффективные алгоритмы автоматической верификации

* Структуры событий
** одна из моделей истинной конкурентности
** краткое описание
** история
*** CCS
** применение для спецификации моделей памяти
*** существующие подходы 
*** проблемы существующих подходов
**** ad-hoc (не согласованы с классической теорией)
**** взрыв пространства состояний
***** препятствует разработке эффективных средств верификации 

* Исследование
** Классическая теория структур событий для моделей памяти сохраняющих программный порядок 
*** Показано, что классической теории достаточно для задания моделей памяти сохраняющих программный порядок. 
*** Теория простых структур событий с обобщенным конфликтом формализована в Coq
** Модель Weakestmo для моделей памяти сохраняющих семантические зависимости 
*** Модель Weakestmo формализована в Coq
*** Доказана корректность компиляции в модели процессоров
** Модель Weakestmo2 для разработки средств автоматической верификации программ
*** предложенны новые свойства для модели Weakestmo 
**** свобода от буфферизации чтений (load buffering freedom)
**** локальность сертификации (certification localicty)
*** данные свойства существенно упрощают задачу проверки моделей для Weakestmo
*** а также открывают путь к разработке эффективных средств автоматической верификации
** Алгоритм проверки моделей для Weakestmo2
*** разработан новый алгоритм проверки моделей
*** алгоритм апробирован на стандартном наборе тестов
*** апробация показала, что алгоритм существенно более эффективный по сравнению с аналогами
